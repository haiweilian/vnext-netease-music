/* BEM https://github.com/element-plus/element-plus/blob/dev/packages/theme-chalk/src/mixins/mixins.scss
-------------------------- */
@mixin b($block) {
  // $B: $namespace+'-'+$block !global;
  $B: $block !global;

  .#{$B} {
    @content;
  }
}

@mixin e($element) {
  $E: $element !global;
  $selector: &;
  $currentSelector: "";

  @each $unit in $element {
    $currentSelector: #{$currentSelector + "." + $B + $element-separator + $unit + ","};
  }

  // @if hitAllSpecialNestRule($selector) {
  //   @at-root {
  //     #{$selector} {
  //       #{$currentSelector} {
  //         @content;
  //       }
  //     }
  //   }
  // }

  // @else {
  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
  // }
}

@mixin m($modifier) {
  $selector: &;
  $currentSelector: "";

  @each $unit in $modifier {
    $currentSelector: #{$currentSelector + & + $modifier-separator + $unit + ","};
  }

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

@mixin when($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}

/* Util
-------------------------- */
@mixin text-ellipsis() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-ellipsis-multi($line) {
  display: -webkit-box;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;
}

@mixin flex-center($direction: row) {
  display: flex;
  flex-direction: $direction;
  align-items: center;
  justify-content: center;
}

@mixin abs-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin abs-stretch {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin round($d) {
  width: $d;
  height: $d;
  border-radius: 50%;
}
